<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="utf-8">
	<meta content="width=device-width, initial-scale=1.0" name="viewport">
	<script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-9957954955121171"
     crossorigin="anonymous"></script>

	<meta content="" name="description">
	<meta content="" name="keywords">

	
	<!-- Favicons -->
	<link href="../../public/img/botçuk logo.png" rel="icon">
	<link href="../../public/img/botçuk logo.png" rel="apple-touch-icon">
  
	<!-- Google Fonts -->
	<link href="https://fonts.googleapis.com/css?family=Open+Sans:300,300i,400,400i,600,600i,700,700i|Nunito:300,300i,400,400i,600,600i,700,700i|Poppins:300,300i,400,400i,500,500i,600,600i,700,700i" rel="stylesheet">
  
	<!-- Vendor CSS Files -->
	<link href="../../../public/assets/vendor/aos/aos.css" rel="stylesheet">
	<link href="../../../public/assets/vendor/bootstrap/css/bootstrap.min.css" rel="stylesheet">
	<link href="../../../public/assets/vendor/bootstrap-icons/bootstrap-icons.css" rel="stylesheet">
	<link href="../../../public/assets/vendor/glightbox/css/glightbox.min.css" rel="stylesheet">
	<link href="../../../public/assets/vendor/remixicon/remixicon.css" rel="stylesheet">
	<link href="../../../public/assets/vendor/swiper/swiper-bundle.min.css" rel="stylesheet">

	<link href="../../../public/assets/vendor/boxicons/css/boxicons.css" rel="stylesheet">
	<link href="../../../public/assets/vendor/quill/quill.snow.css" rel="stylesheet">
	<link href="../../../public/assets/vendor/quill/quill.bubble.css" rel="stylesheet">
	<link href="../../../public/assets/vendor/simple-datatables/style.css" rel="stylesheet">
  
  
	<!-- Template Main CSS File -->
	<link href="../../../public/css/panel/style.css" rel="stylesheet">
	<link href="../../../public/css/index.css" rel="stylesheet">
  

    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-9957954955121171" crossorigin="anonymous"></script>
    <script async src="https://fundingchoicesmessages.google.com/i/pub-9957954955121171?ers=1" nonce="NE87ieSWXkOOuBPME1Rq5g"></script><script nonce="NE87ieSWXkOOuBPME1Rq5g">(function() {function signalGooglefcPresent() {if (!window.frames['googlefcPresent']) {if (document.body) {const iframe = document.createElement('iframe'); iframe.style = 'width: 0; height: 0; border: none; z-index: -1000; left: -1000px; top: -1000px;'; iframe.style.display = 'none'; iframe.name = 'googlefcPresent'; document.body.appendChild(iframe);} else {setTimeout(signalGooglefcPresent, 0);}}}signalGooglefcPresent();})();</script>
    <script>(function(){'use strict';function aa(a){var b=0;return function(){return b<a.length?{done:!1,value:a[b++]}:{done:!0}}}var ba="function"==typeof Object.defineProperties?Object.defineProperty:function(a,b,c){if(a==Array.prototype||a==Object.prototype)return a;a[b]=c.value;return a};
        function ea(a){a=["object"==typeof globalThis&&globalThis,a,"object"==typeof window&&window,"object"==typeof self&&self,"object"==typeof global&&global];for(var b=0;b<a.length;++b){var c=a[b];if(c&&c.Math==Math)return c}throw Error("Cannot find global object");}var fa=ea(this);function ha(a,b){if(b)a:{var c=fa;a=a.split(".");for(var d=0;d<a.length-1;d++){var e=a[d];if(!(e in c))break a;c=c[e]}a=a[a.length-1];d=c[a];b=b(d);b!=d&&null!=b&&ba(c,a,{configurable:!0,writable:!0,value:b})}}
        var ia="function"==typeof Object.create?Object.create:function(a){function b(){}b.prototype=a;return new b},l;if("function"==typeof Object.setPrototypeOf)l=Object.setPrototypeOf;else{var m;a:{var ja={a:!0},ka={};try{ka.__proto__=ja;m=ka.a;break a}catch(a){}m=!1}l=m?function(a,b){a.__proto__=b;if(a.__proto__!==b)throw new TypeError(a+" is not extensible");return a}:null}var la=l;
        function n(a,b){a.prototype=ia(b.prototype);a.prototype.constructor=a;if(la)la(a,b);else for(var c in b)if("prototype"!=c)if(Object.defineProperties){var d=Object.getOwnPropertyDescriptor(b,c);d&&Object.defineProperty(a,c,d)}else a[c]=b[c];a.A=b.prototype}function ma(){for(var a=Number(this),b=[],c=a;c<arguments.length;c++)b[c-a]=arguments[c];return b}
        var na="function"==typeof Object.assign?Object.assign:function(a,b){for(var c=1;c<arguments.length;c++){var d=arguments[c];if(d)for(var e in d)Object.prototype.hasOwnProperty.call(d,e)&&(a[e]=d[e])}return a};ha("Object.assign",function(a){return a||na});/*
        
         Copyright The Closure Library Authors.
         SPDX-License-Identifier: Apache-2.0
        */
        var p=this||self;function q(a){return a};var t,u;a:{for(var oa=["CLOSURE_FLAGS"],v=p,x=0;x<oa.length;x++)if(v=v[oa[x]],null==v){u=null;break a}u=v}var pa=u&&u[610401301];t=null!=pa?pa:!1;var z,qa=p.navigator;z=qa?qa.userAgentData||null:null;function A(a){return t?z?z.brands.some(function(b){return(b=b.brand)&&-1!=b.indexOf(a)}):!1:!1}function B(a){var b;a:{if(b=p.navigator)if(b=b.userAgent)break a;b=""}return-1!=b.indexOf(a)};function C(){return t?!!z&&0<z.brands.length:!1}function D(){return C()?A("Chromium"):(B("Chrome")||B("CriOS"))&&!(C()?0:B("Edge"))||B("Silk")};var ra=C()?!1:B("Trident")||B("MSIE");!B("Android")||D();D();B("Safari")&&(D()||(C()?0:B("Coast"))||(C()?0:B("Opera"))||(C()?0:B("Edge"))||(C()?A("Microsoft Edge"):B("Edg/"))||C()&&A("Opera"));var sa={},E=null;var ta="undefined"!==typeof Uint8Array,ua=!ra&&"function"===typeof btoa;var F="function"===typeof Symbol&&"symbol"===typeof Symbol()?Symbol():void 0,G=F?function(a,b){a[F]|=b}:function(a,b){void 0!==a.g?a.g|=b:Object.defineProperties(a,{g:{value:b,configurable:!0,writable:!0,enumerable:!1}})};function va(a){var b=H(a);1!==(b&1)&&(Object.isFrozen(a)&&(a=Array.prototype.slice.call(a)),I(a,b|1))}
        var H=F?function(a){return a[F]|0}:function(a){return a.g|0},J=F?function(a){return a[F]}:function(a){return a.g},I=F?function(a,b){a[F]=b}:function(a,b){void 0!==a.g?a.g=b:Object.defineProperties(a,{g:{value:b,configurable:!0,writable:!0,enumerable:!1}})};function wa(){var a=[];G(a,1);return a}function xa(a,b){I(b,(a|0)&-99)}function K(a,b){I(b,(a|34)&-73)}function L(a){a=a>>11&1023;return 0===a?536870912:a};var M={};function N(a){return null!==a&&"object"===typeof a&&!Array.isArray(a)&&a.constructor===Object}var O,ya=[];I(ya,39);O=Object.freeze(ya);var P;function Q(a,b){P=b;a=new a(b);P=void 0;return a}
        function R(a,b,c){null==a&&(a=P);P=void 0;if(null==a){var d=96;c?(a=[c],d|=512):a=[];b&&(d=d&-2095105|(b&1023)<<11)}else{if(!Array.isArray(a))throw Error();d=H(a);if(d&64)return a;d|=64;if(c&&(d|=512,c!==a[0]))throw Error();a:{c=a;var e=c.length;if(e){var f=e-1,g=c[f];if(N(g)){d|=256;b=(d>>9&1)-1;e=f-b;1024<=e&&(za(c,b,g),e=1023);d=d&-2095105|(e&1023)<<11;break a}}b&&(g=(d>>9&1)-1,b=Math.max(b,e-g),1024<b&&(za(c,g,{}),d|=256,b=1023),d=d&-2095105|(b&1023)<<11)}}I(a,d);return a}
        function za(a,b,c){for(var d=1023+b,e=a.length,f=d;f<e;f++){var g=a[f];null!=g&&g!==c&&(c[f-b]=g)}a.length=d+1;a[d]=c};function Aa(a){switch(typeof a){case "number":return isFinite(a)?a:String(a);case "boolean":return a?1:0;case "object":if(a&&!Array.isArray(a)&&ta&&null!=a&&a instanceof Uint8Array){if(ua){for(var b="",c=0,d=a.length-10240;c<d;)b+=String.fromCharCode.apply(null,a.subarray(c,c+=10240));b+=String.fromCharCode.apply(null,c?a.subarray(c):a);a=btoa(b)}else{void 0===b&&(b=0);if(!E){E={};c="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789".split("");d=["+/=","+/","-_=","-_.","-_"];for(var e=
        0;5>e;e++){var f=c.concat(d[e].split(""));sa[e]=f;for(var g=0;g<f.length;g++){var h=f[g];void 0===E[h]&&(E[h]=g)}}}b=sa[b];c=Array(Math.floor(a.length/3));d=b[64]||"";for(e=f=0;f<a.length-2;f+=3){var k=a[f],w=a[f+1];h=a[f+2];g=b[k>>2];k=b[(k&3)<<4|w>>4];w=b[(w&15)<<2|h>>6];h=b[h&63];c[e++]=g+k+w+h}g=0;h=d;switch(a.length-f){case 2:g=a[f+1],h=b[(g&15)<<2]||d;case 1:a=a[f],c[e]=b[a>>2]+b[(a&3)<<4|g>>4]+h+d}a=c.join("")}return a}}return a};function Ba(a,b,c){a=Array.prototype.slice.call(a);var d=a.length,e=b&256?a[d-1]:void 0;d+=e?-1:0;for(b=b&512?1:0;b<d;b++)a[b]=c(a[b]);if(e){b=a[b]={};for(var f in e)Object.prototype.hasOwnProperty.call(e,f)&&(b[f]=c(e[f]))}return a}function Da(a,b,c,d,e,f){if(null!=a){if(Array.isArray(a))a=e&&0==a.length&&H(a)&1?void 0:f&&H(a)&2?a:Ea(a,b,c,void 0!==d,e,f);else if(N(a)){var g={},h;for(h in a)Object.prototype.hasOwnProperty.call(a,h)&&(g[h]=Da(a[h],b,c,d,e,f));a=g}else a=b(a,d);return a}}
        function Ea(a,b,c,d,e,f){var g=d||c?H(a):0;d=d?!!(g&32):void 0;a=Array.prototype.slice.call(a);for(var h=0;h<a.length;h++)a[h]=Da(a[h],b,c,d,e,f);c&&c(g,a);return a}function Fa(a){return a.s===M?a.toJSON():Aa(a)};function Ga(a,b,c){c=void 0===c?K:c;if(null!=a){if(ta&&a instanceof Uint8Array)return b?a:new Uint8Array(a);if(Array.isArray(a)){var d=H(a);if(d&2)return a;if(b&&!(d&64)&&(d&32||0===d))return I(a,d|34),a;a=Ea(a,Ga,d&4?K:c,!0,!1,!0);b=H(a);b&4&&b&2&&Object.freeze(a);return a}a.s===M&&(b=a.h,c=J(b),a=c&2?a:Q(a.constructor,Ha(b,c,!0)));return a}}function Ha(a,b,c){var d=c||b&2?K:xa,e=!!(b&32);a=Ba(a,b,function(f){return Ga(f,e,d)});G(a,32|(c?2:0));return a};function Ia(a,b){a=a.h;return Ja(a,J(a),b)}function Ja(a,b,c,d){if(-1===c)return null;if(c>=L(b)){if(b&256)return a[a.length-1][c]}else{var e=a.length;if(d&&b&256&&(d=a[e-1][c],null!=d))return d;b=c+((b>>9&1)-1);if(b<e)return a[b]}}function Ka(a,b,c,d,e){var f=L(b);if(c>=f||e){e=b;if(b&256)f=a[a.length-1];else{if(null==d)return;f=a[f+((b>>9&1)-1)]={};e|=256}f[c]=d;e&=-1025;e!==b&&I(a,e)}else a[c+((b>>9&1)-1)]=d,b&256&&(d=a[a.length-1],c in d&&delete d[c]),b&1024&&I(a,b&-1025)}
        function La(a,b){var c=Ma;var d=void 0===d?!1:d;var e=a.h;var f=J(e),g=Ja(e,f,b,d);var h=!1;if(null==g||"object"!==typeof g||(h=Array.isArray(g))||g.s!==M)if(h){var k=h=H(g);0===k&&(k|=f&32);k|=f&2;k!==h&&I(g,k);c=new c(g)}else c=void 0;else c=g;c!==g&&null!=c&&Ka(e,f,b,c,d);e=c;if(null==e)return e;a=a.h;f=J(a);f&2||(g=e,c=g.h,h=J(c),g=h&2?Q(g.constructor,Ha(c,h,!1)):g,g!==e&&(e=g,Ka(a,f,b,e,d)));return e}function Na(a,b){a=Ia(a,b);return null==a||"string"===typeof a?a:void 0}
        function Oa(a,b){a=Ia(a,b);return null!=a?a:0}function S(a,b){a=Na(a,b);return null!=a?a:""};function T(a,b,c){this.h=R(a,b,c)}T.prototype.toJSON=function(){var a=Ea(this.h,Fa,void 0,void 0,!1,!1);return Pa(this,a,!0)};T.prototype.s=M;T.prototype.toString=function(){return Pa(this,this.h,!1).toString()};
        function Pa(a,b,c){var d=a.constructor.v,e=L(J(c?a.h:b)),f=!1;if(d){if(!c){b=Array.prototype.slice.call(b);var g;if(b.length&&N(g=b[b.length-1]))for(f=0;f<d.length;f++)if(d[f]>=e){Object.assign(b[b.length-1]={},g);break}f=!0}e=b;c=!c;g=J(a.h);a=L(g);g=(g>>9&1)-1;for(var h,k,w=0;w<d.length;w++)if(k=d[w],k<a){k+=g;var r=e[k];null==r?e[k]=c?O:wa():c&&r!==O&&va(r)}else h||(r=void 0,e.length&&N(r=e[e.length-1])?h=r:e.push(h={})),r=h[k],null==h[k]?h[k]=c?O:wa():c&&r!==O&&va(r)}d=b.length;if(!d)return b;
        var Ca;if(N(h=b[d-1])){a:{var y=h;e={};c=!1;for(var ca in y)Object.prototype.hasOwnProperty.call(y,ca)&&(a=y[ca],Array.isArray(a)&&a!=a&&(c=!0),null!=a?e[ca]=a:c=!0);if(c){for(var rb in e){y=e;break a}y=null}}y!=h&&(Ca=!0);d--}for(;0<d;d--){h=b[d-1];if(null!=h)break;var cb=!0}if(!Ca&&!cb)return b;var da;f?da=b:da=Array.prototype.slice.call(b,0,d);b=da;f&&(b.length=d);y&&b.push(y);return b};function Qa(a){return function(b){if(null==b||""==b)b=new a;else{b=JSON.parse(b);if(!Array.isArray(b))throw Error(void 0);G(b,32);b=Q(a,b)}return b}};function Ra(a){this.h=R(a)}n(Ra,T);var Sa=Qa(Ra);var U;function V(a){this.g=a}V.prototype.toString=function(){return this.g+""};var Ta={};function Ua(){return Math.floor(2147483648*Math.random()).toString(36)+Math.abs(Math.floor(2147483648*Math.random())^Date.now()).toString(36)};function Va(a,b){b=String(b);"application/xhtml+xml"===a.contentType&&(b=b.toLowerCase());return a.createElement(b)}function Wa(a){this.g=a||p.document||document}Wa.prototype.appendChild=function(a,b){a.appendChild(b)};/*
        
         SPDX-License-Identifier: Apache-2.0
        */
        function Xa(a,b){a.src=b instanceof V&&b.constructor===V?b.g:"type_error:TrustedResourceUrl";var c,d;(c=(b=null==(d=(c=(a.ownerDocument&&a.ownerDocument.defaultView||window).document).querySelector)?void 0:d.call(c,"script[nonce]"))?b.nonce||b.getAttribute("nonce")||"":"")&&a.setAttribute("nonce",c)};function Ya(a){a=void 0===a?document:a;return a.createElement("script")};function Za(a,b,c,d,e,f){try{var g=a.g,h=Ya(g);h.async=!0;Xa(h,b);g.head.appendChild(h);h.addEventListener("load",function(){e();d&&g.head.removeChild(h)});h.addEventListener("error",function(){0<c?Za(a,b,c-1,d,e,f):(d&&g.head.removeChild(h),f())})}catch(k){f()}};var $a=p.atob("aHR0cHM6Ly93d3cuZ3N0YXRpYy5jb20vaW1hZ2VzL2ljb25zL21hdGVyaWFsL3N5c3RlbS8xeC93YXJuaW5nX2FtYmVyXzI0ZHAucG5n"),ab=p.atob("WW91IGFyZSBzZWVpbmcgdGhpcyBtZXNzYWdlIGJlY2F1c2UgYWQgb3Igc2NyaXB0IGJsb2NraW5nIHNvZnR3YXJlIGlzIGludGVyZmVyaW5nIHdpdGggdGhpcyBwYWdlLg=="),bb=p.atob("RGlzYWJsZSBhbnkgYWQgb3Igc2NyaXB0IGJsb2NraW5nIHNvZnR3YXJlLCB0aGVuIHJlbG9hZCB0aGlzIHBhZ2Uu");function db(a,b,c){this.i=a;this.l=new Wa(this.i);this.g=null;this.j=[];this.m=!1;this.u=b;this.o=c}
        function eb(a){if(a.i.body&&!a.m){var b=function(){fb(a);p.setTimeout(function(){return gb(a,3)},50)};Za(a.l,a.u,2,!0,function(){p[a.o]||b()},b);a.m=!0}}
        function fb(a){for(var b=W(1,5),c=0;c<b;c++){var d=X(a);a.i.body.appendChild(d);a.j.push(d)}b=X(a);b.style.bottom="0";b.style.left="0";b.style.position="fixed";b.style.width=W(100,110).toString()+"%";b.style.zIndex=W(2147483544,2147483644).toString();b.style["background-color"]=hb(249,259,242,252,219,229);b.style["box-shadow"]="0 0 12px #888";b.style.color=hb(0,10,0,10,0,10);b.style.display="flex";b.style["justify-content"]="center";b.style["font-family"]="Roboto, Arial";c=X(a);c.style.width=W(80,
        85).toString()+"%";c.style.maxWidth=W(750,775).toString()+"px";c.style.margin="24px";c.style.display="flex";c.style["align-items"]="flex-start";c.style["justify-content"]="center";d=Va(a.l.g,"IMG");d.className=Ua();d.src=$a;d.alt="Warning icon";d.style.height="24px";d.style.width="24px";d.style["padding-right"]="16px";var e=X(a),f=X(a);f.style["font-weight"]="bold";f.textContent=ab;var g=X(a);g.textContent=bb;Y(a,e,f);Y(a,e,g);Y(a,c,d);Y(a,c,e);Y(a,b,c);a.g=b;a.i.body.appendChild(a.g);b=W(1,5);for(c=
        0;c<b;c++)d=X(a),a.i.body.appendChild(d),a.j.push(d)}function Y(a,b,c){for(var d=W(1,5),e=0;e<d;e++){var f=X(a);b.appendChild(f)}b.appendChild(c);c=W(1,5);for(d=0;d<c;d++)e=X(a),b.appendChild(e)}function W(a,b){return Math.floor(a+Math.random()*(b-a))}function hb(a,b,c,d,e,f){return"rgb("+W(Math.max(a,0),Math.min(b,255)).toString()+","+W(Math.max(c,0),Math.min(d,255)).toString()+","+W(Math.max(e,0),Math.min(f,255)).toString()+")"}function X(a){a=Va(a.l.g,"DIV");a.className=Ua();return a}
        function gb(a,b){0>=b||null!=a.g&&0!=a.g.offsetHeight&&0!=a.g.offsetWidth||(ib(a),fb(a),p.setTimeout(function(){return gb(a,b-1)},50))}
        function ib(a){var b=a.j;var c="undefined"!=typeof Symbol&&Symbol.iterator&&b[Symbol.iterator];if(c)b=c.call(b);else if("number"==typeof b.length)b={next:aa(b)};else throw Error(String(b)+" is not an iterable or ArrayLike");for(c=b.next();!c.done;c=b.next())(c=c.value)&&c.parentNode&&c.parentNode.removeChild(c);a.j=[];(b=a.g)&&b.parentNode&&b.parentNode.removeChild(b);a.g=null};function jb(a,b,c,d,e){function f(k){document.body?g(document.body):0<k?p.setTimeout(function(){f(k-1)},e):b()}function g(k){k.appendChild(h);p.setTimeout(function(){h?(0!==h.offsetHeight&&0!==h.offsetWidth?b():a(),h.parentNode&&h.parentNode.removeChild(h)):a()},d)}var h=kb(c);f(3)}function kb(a){var b=document.createElement("div");b.className=a;b.style.width="1px";b.style.height="1px";b.style.position="absolute";b.style.left="-10000px";b.style.top="-10000px";b.style.zIndex="-10000";return b};function Ma(a){this.h=R(a)}n(Ma,T);function lb(a){this.h=R(a)}n(lb,T);var mb=Qa(lb);function nb(a){a=Na(a,4)||"";if(void 0===U){var b=null;var c=p.trustedTypes;if(c&&c.createPolicy){try{b=c.createPolicy("goog#html",{createHTML:q,createScript:q,createScriptURL:q})}catch(d){p.console&&p.console.error(d.message)}U=b}else U=b}a=(b=U)?b.createScriptURL(a):a;return new V(a,Ta)};function ob(a,b){this.m=a;this.o=new Wa(a.document);this.g=b;this.j=S(this.g,1);this.u=nb(La(this.g,2));this.i=!1;b=nb(La(this.g,13));this.l=new db(a.document,b,S(this.g,12))}ob.prototype.start=function(){pb(this)};
        function pb(a){qb(a);Za(a.o,a.u,3,!1,function(){a:{var b=a.j;var c=p.btoa(b);if(c=p[c]){try{var d=Sa(p.atob(c))}catch(e){b=!1;break a}b=b===Na(d,1)}else b=!1}b?Z(a,S(a.g,14)):(Z(a,S(a.g,8)),eb(a.l))},function(){jb(function(){Z(a,S(a.g,7));eb(a.l)},function(){return Z(a,S(a.g,6))},S(a.g,9),Oa(a.g,10),Oa(a.g,11))})}function Z(a,b){a.i||(a.i=!0,a=new a.m.XMLHttpRequest,a.open("GET",b,!0),a.send())}function qb(a){var b=p.btoa(a.j);a.m[b]&&Z(a,S(a.g,5))};(function(a,b){p[a]=function(){var c=ma.apply(0,arguments);p[a]=function(){};b.apply(null,c)}})("__h82AlnkH6D91__",function(a){"function"===typeof window.atob&&(new ob(window,mb(window.atob(a)))).start()});}).call(this);
        
        window.__h82AlnkH6D91__("WyJwdWItOTk1Nzk1NDk1NTEyMTE3MSIsW251bGwsbnVsbCxudWxsLCJodHRwczovL2Z1bmRpbmdjaG9pY2VzbWVzc2FnZXMuZ29vZ2xlLmNvbS9iL3B1Yi05OTU3OTU0OTU1MTIxMTcxIl0sbnVsbCxudWxsLCJodHRwczovL2Z1bmRpbmdjaG9pY2VzbWVzc2FnZXMuZ29vZ2xlLmNvbS9lbC9BR1NLV3hVYVBSODQxVDRXWDNwSENidnE5MFBiLWhJUU9wZ3Bvd25nN045VU9PS1F0TTdGV1RIQm5ZX0JaVi0zVkVEN0t2ZjJabEdiN0pZNE02RmZuaDRmNk9sSDRBXHUwMDNkXHUwMDNkP3RlXHUwMDNkVE9LRU5fRVhQT1NFRCIsImh0dHBzOi8vZnVuZGluZ2Nob2ljZXNtZXNzYWdlcy5nb29nbGUuY29tL2VsL0FHU0tXeFdvZEFBMzU5em9jenV5dlUzcDI2NEhHcTJwSWlZRXR5UDMzM1NCbjE3YXowdmxKSzhtNlI2azVZUVdyYUI2Y0RSMDlidGxhZHlWdVVUT0xPc1gtQ2hlN1FcdTAwM2RcdTAwM2Q/YWJcdTAwM2QxXHUwMDI2c2JmXHUwMDNkMSIsImh0dHBzOi8vZnVuZGluZ2Nob2ljZXNtZXNzYWdlcy5nb29nbGUuY29tL2VsL0FHU0tXeFhtVHlkQlhjdDUwWGFzNGxHdy0xRlFQWFpMQ0VaTktTdXFfTWMzdVE0eEhvdUp0VXZGLVN2bFp4NHY5REMyQUtBSnBhbVdWWnRGb0w1dkxJaGk1a21lNkFcdTAwM2RcdTAwM2Q/YWJcdTAwM2QyXHUwMDI2c2JmXHUwMDNkMSIsImh0dHBzOi8vZnVuZGluZ2Nob2ljZXNtZXNzYWdlcy5nb29nbGUuY29tL2VsL0FHU0tXeFcwa1g5bU5idDJJTlhwQ2haNlhRZ3p0LTZ3eHBHaklKWlk5NG5hdHJaV21raGlXd0FIS2lWUE9GOGJ2MlZodkVDUWpsR1E4V3J1bFVSYm1MUWU0OVM5cXdcdTAwM2RcdTAwM2Q/c2JmXHUwMDNkMiIsImRpdi1ncHQtYWQiLDIwLDEwMCwiY0hWaUxUazVOVGM1TlRRNU5UVXhNakV4TnpFXHUwMDNkIixbbnVsbCxudWxsLG51bGwsImh0dHBzOi8vd3d3LmdzdGF0aWMuY29tLzBlbW4vZi9wL3B1Yi05OTU3OTU0OTU1MTIxMTcxLmpzP3VzcXBcdTAwM2RDQXMiXSwiaHR0cHM6Ly9mdW5kaW5nY2hvaWNlc21lc3NhZ2VzLmdvb2dsZS5jb20vZWwvQUdTS1d4V3VtNjIwYUtKRy03b19McXBiVDczbUEzWHVZeS1VWnQ3SjNYZzRFbmlJQWRGQWpWTFdaTkpKcF9CbUdkOERtNHp6WXBNWlJWU1ktRUtPRVAyMFVlMmxtQVx1MDAzZFx1MDAzZCJd");</script>
	

	<!-- =======================================================
	* Template Name: FlexStart
	* Updated: Mar 10 2023 with Bootstrap v5.2.3
	* Template URL: https://bootstrapmade.com/flexstart-bootstrap-startup-template/
	* Author: BootstrapMade.com
	* License: https://bootstrapmade.com/license/
	======================================================== -->
	<title><%- guild.name %> |  KAYIT SİSTEMİ</title>
	<%

	const userId = req.user.id;
	const avatarUrl = `https://cdn.discordapp.com/avatars/${userId}/${req.user.avatar}.png`;
	
	let sistem;
	const dbClient = bot.dbClient;
	const db = dbClient.db("botcuk");
	const collection = db.collection("kayit");
	const filter = {
		_id: guild.id,
	};
	const checkResult = await collection.findOne(filter);
	let welcomeEnabled;
	let channelId;
	let message;
	let message2;
	let headline;
	let headline2;
	let thumbnail;
	let thumbnail2;
	let image;
	let image2;
	let color;
	let color2;
	let dm;
	let role;
	let otoRol;
	let age;
	let tag;
	let sembol;

	if (checkResult == null) { 
		welcomeEnabled = false;
		channelId = "unset";
		channelId2 = "unset";
		headline = "unset";
		message = "unset";
		thumbnail = false;
		image = [false ,"unset"];
		color = "#618eb1";
		message2 = "unset";
		thumbnail2 = false;
		image2 = [false ,"unset"];
		color2 = "#618eb1";
		dm = [false, "unset"];
		role = [false ,"unset"];
		role2 = [false ,"unset"];
		role3 = [true ,"unset"];
		role4 = [true ,"unset"];
		role5 = [true ,"unset"];
		otoRol = false;
		age = false;
		tag = [false ,"unset"];
		sembol = [false ,"unset"];

	} else {
		welcomeEnabled = checkResult.enabled;
		channelId = checkResult.channelId;
		channelId2 = checkResult.channelId2;
		headline = checkResult.headline;
		message = checkResult.message;
		thumbnail = checkResult.thumbnail;
		image = checkResult.image;
		color = checkResult.color;
		headline2 = checkResult.headline2;
		message2 = checkResult.message2;
		thumbnail2 = checkResult.thumbnail2;
		image2 = checkResult.image2;
		color2 = checkResult.color2;
		dm = checkResult.dm;
		role = checkResult.role;
		role2 = checkResult.role2;
		role3 = checkResult.role3;
		role4 = checkResult.role4;
		role5 = checkResult.role5;
		otoRol = checkResult.otoRol;
		age = checkResult.age;
		tag = checkResult.tag;
		sembol = checkResult.sembol;
	}
// 1.
	if (message == "unset") {
		message = "";
	}
	if (headline == "unset") {
		headline = "";
	}

	if (image[1] == "unset") {
		image[1] = "";
	}
	if (image[0] == false) {
		image[0] = "";
		image[2] = "";
	} else if (image[0] == true) {
		image[0] = "checked";
		image[2] = "required";
	}

	let thumbnailYes;
	let thumbnailNo;
	if (thumbnail == false) {
		thumbnailYes = "";
		thumbnailNo = "checked";
	} else if (thumbnail == true) {
		thumbnailYes = "checked";
		thumbnailNo = "";
	}

	// 2.
	if (message2 == "unset") {
		message2 = "";
	}
	if (headline2 == "unset") {
		headline2 = "";
	}

	if (image2[1] == "unset") {
		image2[1] = "";
	}
	if (image2[0] == false) {
		image2[0] = "";
		image2[2] = "";
	} else if (image2[0] == true) {
		image2[0] = "checked";
		image2[2] = "required";
	}

	let thumbnailYes2;
	let thumbnailNo2;
	if (thumbnail2 == false) {
		thumbnailYes2 = "";
		thumbnailNo2 = "checked";
	} else if (thumbnail2 == true) {
		thumbnailYes2 = "checked";
		thumbnailNo2 = "";
	}
	// bitiş
	if (dm[0] == false) {
		dm[0] = "";
		dm[2] = "";
	} else if (dm[0] == true) {
		dm[0] = "checked";
		dm[2] = "required";
	}
	if (dm[1] == "unset") {
		dm[1] = "";
	}
	
	if (role[0] == false) {
		role[0] = "";
		role[2] = "";
	} else if (role[0] == true) {
		role[0] = "checked";
		role[2] = "required";
	}
	if (role[1] == "unset") {
		role[1] = "";
	}
//
	if (role2[0] == false) {
		role2[0] = "";
		role2[2] = "";
	} else if (role2[0] == true) {
		role2[0] = "checked";
		role2[2] = "required";
	}
	if (role2[1] == "unset") {
		role2[1] = "";
	}
//
	if (role3[0] == false) {
		role3[0] = "";
		role3[2] = "";
	} else if (role3[0] == true) {
		role3[0] = "checked";
		role3[2] = "required";
	}
	if (role3[1] == "unset") {
		role3[1] = "";
	}
//
	if (role4[0] == false) {
		role4[0] = "";
		role4[2] = "";
	} else if (role4[0] == true) {
		role4[0] = "checked";
		role4[2] = "required";
	}
	if (role4[1] == "unset") {
		role4[1] = "";
	}
//
	if (role5[0] == false) {
		role5[0] = "";
		role5[2] = "";
	} else if (role5[0] == true) {
		role5[0] = "checked";
		role5[2] = "required";
	}
	if (role5[1] == "unset") {
		role5[1] = "";
	}


//chanel
const channels = await guild.channels.fetch();
	let channel;
	let channel2;
	if (channelId !== "unset") {
		channel = await guild.channels.fetch(channelId);
	} else {
		channel = "unset";
		channel.name = "unset";
		channel.id = "unset";
	}
	//
	if (channelId2 !== "unset") {
		channel2 = await guild.channels.fetch(channelId2);
	} else {
		channel2 = "unset";
		channel2.name = "unset";
		channel2.id = "unset";
	}
	//

	let ageYes;
	let ageNo;
	if (age == false) {
		ageYes = "";
		ageNo = "checked";
	} else if (age == true) {
		ageYes = "checked";
		ageNo = "";
	}
	let otoRolYes;
	let otoRolNo;
	if (otoRol == false) {
		otoRolYes = "";
		otoRolNo = "checked";
	} else if (otoRol == true) {
		otoRolYes = "checked";
		otoRolNo = "";
	}

	if (tag[1] == "unset") {
		tag[1] = "";
	}
	if (tag[0] == false) {
		tag[0] = "";
		tag[2] = "";
	} else if (tag[0] == true) {
		tag[0] = "checked";
		tag[2] = "required";
	}

	if (sembol[1] == "unset") {
		sembol[1] = "";
	}
	if (sembol[0] == false) {
		sembol[0] = "";
		sembol[2] = "";
	} else if (sembol[0] == true) {
		sembol[0] = "checked";
		sembol[2] = "required";
	}

	let guildChannels = {};
	let num = 0;
	channels.forEach(channel => {
		if (channel.type == 0) {
			num++;
			guildChannels[num] = [channel.name, channel.id];
		}
	})
	let guildRoles = {};
	let guildRoles1 = {};
	let cRole;
	let cRole2;
	let cRole3;
	let cRole4;
	let cRole5;
	try {
		
		const roles = await guild.roles.fetch();
		if (role[1] !== "unset") {
			cRole = await guild.roles.fetch(role[1]);
		} else {
			cRole = "unset";
			cRole.name = "unset";
			cRole.id = "unset";
		}
//
		if (role2[1] !== "unset") {
			cRole2 = await guild.roles.fetch(role2[1]);
		} else {
			cRole2 = "unset";
			cRole2.name = "unset";
			cRole2.id = "unset";
		}
//
		if (role3[1] !== "unset") {
			cRole3 = await guild.roles.fetch(role3[1]);
		} else {
			cRole3 = "unset";
			cRole3.name = "unset";
			cRole3.id = "unset";
		}
//
		if (role4[1] !== "unset") {
			cRole4 = await guild.roles.fetch(role4[1]);
		} else {
			cRole4 = "unset";
			cRole4.name = "unset";
			cRole4.id = "unset";
		}
//
		if (role5[1] !== "unset") {
			cRole5 = await guild.roles.fetch(role5[1]);
		} else {
			cRole5 = "unset";
			cRole5.name = "unset";
			cRole5.id = "unset";
		}



		const botHighestRole = await guild.members.me.roles.highest;

    // Botun rolünden küçük olan tüm rolleri guildRoles1 nesnesine ekleyen bir döngü
    roles.forEach(role => {
        if (role.position !== 0) { // Rolün pozisyonu 0 değilse
            if (guild.roles.comparePositions(botHighestRole, role) > 0) { // Rol botun rolünden küçükse
                guildRoles1[role.position] = [role.name, role.id]; // Rolü guildRoles1 nesnesine ekle
            }
        }
    })

    // Otomatik rolleri atlayan ve normal rolleri guildRoles nesnesine ekleyen bir döngü
    roles.forEach(role => {
        if (role.position !== 0 && !role.managed) { // Rolün pozisyonu 0 değilse ve yönetilmiyorsa
            if (guild.roles.comparePositions(botHighestRole, role) > 0) { // Rol botun rolünden küçükse
                guildRoles[role.position] = [role.name, role.id]; // Rolü guildRoles nesnesine ekle
            }
        }
    })

    // guildRoles ve guildRoles1 nesnelerini dizilere dönüştür ve rol pozisyonuna göre sırala
    guildRoles = Object.values(guildRoles).sort((a,b) => a[0] - b[0]);
    guildRoles1 = Object.values(guildRoles1).sort((a,b) => a[0] - b[0]);

    

	} catch (error) {
		return res.redirect("/dashboard/"+guild.id+"/server/?error=" + encodeURIComponent(`Sunucu rolleriniz alınırken bir hata oluştu. Lütfen botun sahip olduğu rolün sunucudaki diğer üyelerin üstünde olduğuna dikkat ediniz (\n Bu yardımcı olmazsa, lütfen bizimle iletişime geçin!)`+ "&errorID=" + encodeURIComponent("RoleError")));
	}

	if (welcomeEnabled == true) {
		sistem = "checked";
	} else {
		sistem = ""
	}

	let formActiveOrPassive;
	if (welcomeEnabled == true) {
		formActiveOrPassive = ""
	} else {
		formActiveOrPassive = "disabled"
	}





	%>
	<script>
		function kayitFormSistem() {
			const welcomeToggleForm = document.getElementById("kayitForm");
			const sistem = document.getElementById("kayitSistem");
			const isChecked = sistem.checked
			if (isChecked) {
				welcomeToggleForm.submit();
			} else {
				sistem.checked = true;
				sistem.value = "off";
				welcomeToggleForm.submit();
			}
		}

		function hiddenStuff(fn) {
			switch (fn) {
				case "all": case "img": {
					function showImageURL() {
						const button = document.getElementById("welcomeImageCheck");
						const HDbutton = document.getElementById("welcomeImageCheckHD")
						let vis = "none";
						if (button.checked) {
							vis = "block";
							button.value = "true";
							document.getElementById("welcomeImageURL").required = true;
							HDbutton.checked = false;
						} else {
							button.value = "false";
							document.getElementById("welcomeImageURL").required = false;
							button.checked = false;
							HDbutton.checked = true;
						}
						document.getElementById("welcomeImage").style.display = vis;
					}
					showImageURL()
					if (fn == "img") {
						break;
					}
				}
				case "all": case "img2": {
					function showImageURL() {
						const button = document.getElementById("welcomeImageCheck2");
						const HDbutton = document.getElementById("welcomeImageCheckHD2")
						let vis = "none";
						if (button.checked) {
							vis = "block";
							button.value = "true";
							document.getElementById("welcomeImageURL2").required = true;
							HDbutton.checked = false;
						} else {
							button.value = "false";
							document.getElementById("welcomeImageURL2").required = false;
							button.checked = false;
							HDbutton.checked = true;
						}
						document.getElementById("welcomeImage2").style.display = vis;
					}
					showImageURL()
					if (fn == "img2") {
						break;
					}
				}
				case "all": case "tag": {
					function showImageURL() {
						const button = document.getElementById("tagCheck");
						const HDbutton = document.getElementById("tagCheckHD")
						let vis = "none";
						if (button.checked) {
							vis = "block";
							button.value = "true";
							document.getElementById("tagURL").required = true;
							HDbutton.checked = false;
						} else {
							button.value = "false";
							document.getElementById("tagURL").required = false;
							button.checked = false;
							HDbutton.checked = true;
						}
						document.getElementById("tag").style.display = vis;
					}
					showImageURL()
					if (fn == "tag") {
						break;
					}
				}
				case "all": case "sembol": {
					function showImageURL() {
						const button = document.getElementById("sembolCheck");
						const HDbutton = document.getElementById("sembolCheckHD")
						let vis = "none";
						if (button.checked) {
							vis = "block";
							button.value = "true";
							document.getElementById("sembolURL").required = true;
							HDbutton.checked = false;
						} else {
							button.value = "false";
							document.getElementById("sembolURL").required = false;
							button.checked = false;
							HDbutton.checked = true;
						}
						document.getElementById("sembol").style.display = vis;
					}
					showImageURL()
					if (fn == "sembol") {
						break;
					}
				}

				case "all": case "dm":  {
					function showDm() {
						const button = document.getElementById("welcomeDmCheck");
						const HDbutton = document.getElementById("welcomeDmCheckHD")
						let vis = "none";
						if (button.checked) {
							vis = "block";
							button.value = "true";
							document.getElementById("welcomeDmText").required = true;
							HDbutton.checked = false;
						} else {
							button.value = "false";
							document.getElementById("welcomeDmText").required = false;
							button.checked = false;
							HDbutton.checked = true;
						}
						document.getElementById("welcomeDm").style.display = vis;
					}
					showDm()
					if (fn == "dm") {
						break;
					}
				}
			}
		}
		// bu kısım sayfada yerleştirmeleri ön izlemek için olan backend kodlarını içerir.
		window.onload = function() {
			hiddenStuff("all");
			previewEmbed();
		}

		function previewEmbed() {
			//1. embed
			const embedTitle = document.getElementsByClassName("discord-embed-title")[0];
			const embedDescription = document.getElementsByClassName("discord-embed-description")[0];
			const embedThumbnail = document.getElementsByClassName("discord-embed-thumbnail")[0];
			const embedImage = document.getElementsByClassName("discord-embed-image")[0];
			const embedColor = document.getElementsByClassName("discord-embed-left-border")[0];

				const embedTitle2 = document.getElementsByClassName("discord-embed-title2")[0];
				const embedDescription2 = document.getElementsByClassName("discord-embed-description2")[0];
				const embedThumbnail2 = document.getElementsByClassName("discord-embed-thumbnail2")[0];
				const embedImage2 = document.getElementsByClassName("discord-embed-image2")[0];
				const embedColor2 = document.getElementsByClassName("discord-embed-left-border2")[0];

			let inputTitle = document.getElementById("welcomeEmbedHeadline").value;
			let inputDescription = document.getElementById("welcomeEmbedText").value;
			let inputThumbnailStatus;
			let inputImageStatus;
			const inputImageValue = document.getElementById("welcomeImageURL").value;
			const inputColor = document.getElementById("welcomeEmbedColor").value;

				let inputTitle2 = document.getElementById("welcomeEmbedHeadline2").value;
				let inputDescription2 = document.getElementById("welcomeEmbedText2").value;
				let inputThumbnailStatus2;
				let inputImageStatus2;
				const inputImageValue2 = document.getElementById("welcomeImageURL2").value;
				const inputColor2 = document.getElementById("welcomeEmbedColor2").value;

			if (document.getElementById("welcomeThumbnailYes").checked) {
				inputThumbnailStatus = true;
			} else {
				inputThumbnailStatus = false;
			}

			if (document.getElementById("welcomeImage").style.display == "block") {
				inputImageStatus = true;
			} else {
				inputImageStatus = false;
			}

				if (document.getElementById("welcomeThumbnailYes2").checked) {
					inputThumbnailStatus2 = true;
				} else {
					inputThumbnailStatus2 = false;
				}

				if (document.getElementById("welcomeImage2").style.display == "block") {
					inputImageStatus2 = true;
				} else {
					inputImageStatus2 = false;
				}
				
			inputTitle = inputTitle.replace("${memberName}", "Botçuk");
			inputTitle = inputTitle.replace("${memberNumber}", "52");
			inputTitle = inputTitle.replace("${serverName}", "Botçuk destek sunucusu");

			inputDescription = inputDescription.replaceAll("${memberMention}", "**@Botçuk**");
			inputDescription = inputDescription.replaceAll("${memberName}", "botçuk");
			inputDescription = inputDescription.replaceAll("${memberNumber}", "52");
			inputDescription = inputDescription.replaceAll("${serverName}", "Botçuk destek sunucusu");

			inputDescription = inputDescription.replaceAll(/\*(.*?)\*/g, match => {
				if (match.startsWith("**")) return match;
				match = `<i>${match.slice(1,-1)}</i>`;
				return match;
			});
			inputDescription = inputDescription.replaceAll(/_(.*?)_/g, match => {
				if (match.startsWith("__")) return match;
				match = `<i>${match.slice(1,-1)}</i>`;
				return match;
			});
			inputDescription = inputDescription.replaceAll(/\*\*(.*?)\*\*/g, match => {
				match = `<b>${match.slice(2,-2)}</b>`;
				return match;
			});
			inputDescription = inputDescription.replaceAll(/__(.*?)__/g, match => {
				match = `<u>${match.slice(2,-2)}</u>`;
				return match;
			});
			inputDescription = inputDescription.replaceAll(/~~(.*?)~~/g, match => {
				match = `<s>${match.slice(2,-2)}</s>`;
				return match;
			});


			embedTitle.innerText = `${inputTitle}`;
			embedDescription.innerHTML = `${inputDescription}`;

			if (inputThumbnailStatus == true) {
				embedThumbnail.style.display = "";
			} else {
				embedThumbnail.style.display = "none";
			}

			if (inputImageStatus == true) {
				embedImage.style.display = "";
			} else {
				embedImage.style.display = "none";
			}

			if (inputImageValue !== "") {
				embedImage.src = inputImageValue;
			} else {
				embedImage.src = "https://www.schulz-grafik.de/wp-content/uploads/2018/03/placeholder.png"
			}

			embedColor.style["background-color"] = inputColor;

			
				inputTitle2 = inputTitle2.replace("${memberName}", "Botçuk");
				inputTitle2 = inputTitle2.replace("${memberNumber}", "52");
				inputTitle2 = inputTitle2.replace("${serverName}", "Botçuk destek sunucusu");

				inputDescription2 = inputDescription2.replaceAll("${memberMention}", "**@Botçuk**");
				inputDescription2 = inputDescription2.replaceAll("${memberName}", "botçuk");
				inputDescription2 = inputDescription2.replaceAll("${memberNumber}", "52");
				inputDescription2 = inputDescription2.replaceAll("${serverName}", "Botçuk destek sunucusu");

				inputDescription2 = inputDescription2.replaceAll(/\*(.*?)\*/g, match => {
					if (match.startsWith("**")) return match;
					match = `<i>${match.slice(1,-1)}</i>`;
					return match;
				});
				inputDescription2 = inputDescription2.replaceAll(/_(.*?)_/g, match => {
					if (match.startsWith("__")) return match;
					match = `<i>${match.slice(1,-1)}</i>`;
					return match;
				});
				inputDescription2 = inputDescription2.replaceAll(/\*\*(.*?)\*\*/g, match => {
					match = `<b>${match.slice(2,-2)}</b>`;
					return match;
				});
				inputDescription2 = inputDescription2.replaceAll(/__(.*?)__/g, match => {
					match = `<u>${match.slice(2,-2)}</u>`;
					return match;
				});
				inputDescription2 = inputDescription2.replaceAll(/~~(.*?)~~/g, match => {
					match = `<s>${match.slice(2,-2)}</s>`;
					return match;
				});


				embedTitle2.innerText2= `${inputTitle2}`;
				embedDescription2.innerHTML = `${inputDescription2}`;

				if (inputThumbnailStatus2 == true) {
					embedThumbnail2.style.display = "";
				} else {
					embedThumbnail2.style.display = "none";
				}

				if (inputImageStatus2 == true) {
					embedImage2.style.display = "";
				} else {
					embedImage2.style.display = "none";
				}

				if (inputImageValue2 !== "") {
					embedImage2.src = inputImageValue2;
				} else {
					embedImage2.src = "https://www.schulz-grafik.de/wp-content/uploads/2018/03/placeholder.png"
				}

				embedColor2.style["background-color2"] = inputColor2;
		}

	</script>
</head>
<body>
	<%- await include('../header.ejs'); %>
	<%- await include('../sidebar.ejs'); %>

	
	<main id="main" class="main">

		<div class="pagetitle">
		  <h1>Kayıt Sistemi Ayarları&nbsp;</h1>
		  <nav>
			<ol class="breadcrumb">
			  <li class="breadcrumb-item"><a href="<%- botconfig.domain %>/dashboard">Sunucular</a></li>
			  <li class="breadcrumb-item"><a href="<%- botconfig.domain %>/dashboard/<%- guild.id %>"><%= guild.name %></a></li>
			  <li class="breadcrumb-item active">Gelişmiş Kayıt Sistemi&nbsp;</li>
			</ol>
		  </nav>
		</div><!-- End Page Title -->
		
			
		<section class="section">
			<div class="row">
			  <div class="col-12">
				<div class="card">
				  <div class="card-body p-4">
					<p style="text-align: center;">Gelişmiş tamamı ayarlamalı kayıt sistemi. <b class="bas3">(beta)</b></p>
					  <div class="row">
						  <div class="col-10">
							  <h5>
								  Gelişmiş  Kayıt Sistemi
							  </h5>
					  </div>
						<div class="col-2 flex-row-reverse d-flex align-items-lg-center">
  
						  <form method="post" id="kayitForm">
							  <div class="form-check form-switch">
								  <input class="form-check-input" name="kayitSistem" type="checkbox" role="switch" id="kayitSistem" style="width: 3rem; height: 1.5rem;" onclick="kayitFormSistem()" <%= sistem %>>
								  <label class="form-check-label" for="kayitSistem"></label>
							  </div>
						  </form>
						  </div>
					  </div>
				  </div>
				</div>
				  <% if (formActiveOrPassive == "") { %>
					<form method="post" id="welcomeInformationForm"  onsubmit="document.getElementById('roleDefaultOption').disabled=false;">
					  
						<div class="row ">
						<div class="col-lg-6 ">
							<div class="card pt-2">
								<div class="col-lg-12 pb-3 pt-2 ps-3 pe-3 ">
									<p class="bas2" style="text-align: center;">Kayıtların yapılacağı kanal</p>
										<h5 class="bas" style="text-align: center;" >Kayıt kanalı</h5>
	
												<select name="welcomeChannel" id="welcomeChannel" class="form-select bg-dark text-white" required <%= formActiveOrPassive %> >
													<% if (channel !== "unset") { %>
												<option selected value="<%= channel.id %>" class="cntr"># <%= channel.name %></option>
													<% } else { %>
														<option disabled selected value="" class="cntr" >--- Kayıt Kanalını Seçin ---</option>
													<% } %> 
													<% for( let index = 1; index <= Object.keys(guildChannels).length; index++ ) { %>
														<% if (guildChannels[index][1] !== channel.id) { %>
															<option value="<%= guildChannels[index][1] %>" class="cntr"># <%= guildChannels[index][0] %></option>
														<% } %>
													<% } %>
												</select>


							  <div class="mb-12 col-md-12">
								  <label for="welcomeEmbedHeadline" class="col-12 bas pt-3" style="text-align: center;"><h5>Yerleştİrme Başliğİ</h5></label>
								  <input type="text" name="welcomeEmbedHeadline" class="form-control bg-dark text-white" id="welcomeEmbedHeadline" value="<%= headline %>" required <%= formActiveOrPassive %> onkeydown="return event.key != 'Enter';" oninput="previewEmbed()">
							  </div>
							  <div class="mb-12 col-md-12">
								  <label for="welcomeEmbedText" class="col-12 col-form-label bas pt-3" style="text-align: center;"><h5>Yerleştİrme İçerİğİ</h5></label>
								  <textarea type="text" name="welcomeEmbedText" class="form-control bg-dark text-white" id="welcomeEmbedText" rows="5" <%= formActiveOrPassive %> required oninput="previewEmbed()"><%= message %></textarea>
							  </div>
															
							  <div class="row ">
							  <div class="col-6" >
								  <p class="bas pt-2" style="text-align: center;">profİl resmİ</p>
								  <div class="row ">
									<div class="d-flex justify-content-center">
									<div class="form-check form-check-inline col-6 d-flex justify-content-center">
										<input class="form-check-input d-flex justify-content-center" name="welcomeThumbnail" type="radio" id="welcomeThumbnailYes" value="true" <%= formActiveOrPassive %> <%= thumbnailYes %> oninput="previewEmbed()">
										<label class="form-check-label d-flex justify-content-center" for="welcomeThumbnailYes">Açık</label>
									</div>
									<div class="form-check form-check-inline col-6 d-flex justify-content-center">
										<input class="form-check-input d-flex justify-content-center" name="welcomeThumbnail" type="radio" id="welcomeThumbnailNo" value="false" <%= formActiveOrPassive %> <%= thumbnailNo %> oninput="previewEmbed()">
										<label class="form-check-label d-flex justify-content-center" for="welcomeThumbnailNo">Kapalı</label>
									</div>
								</div>
								</div>
							  </div>
							  <div class="col-6">
								<p for="welcomeEmbedColor" class="pt-2 bas" style="text-align: center;">Yerleştİrme Rengİ</p>
								<div class="col-12 align-items-center  d-flex flex-column">
								  <input type="color" name="welcomeEmbedColor" id="welcomeEmbedColor" class="form-control form-control-color bg-dark text-white" value="<%= color %>" <%= formActiveOrPassive %> required oninput="previewEmbed()">
							  </div>
							  </div>
							</div>
							<div class="row">
								<div class="col-6 align-items-lg-center flex-column d-flex cntr">
									<p  class="bas pt-2" style="text-align: center;">Özel Resİm</p>
								<div class="align-items-center d-flex flex-column">
									<input type="checkbox" name="welcomeImageCheck" id="welcomeImageCheckHD" style="display: none;" value="off">
									<input  type="checkbox" name="welcomeImageCheck" id="welcomeImageCheck" class="form-check-input" onclick="hiddenStuff('img'); previewEmbed();" <%= formActiveOrPassive %> <%= image[0] %>>
									<label for="welcomeImageCheck" class="form-check-label">(Etkinleştirmek İçin Tıklayın)</label>
								</div>
								</div>

								<div class="col-6 cntr">
									<p class="bas pt-2" style="text-align: center;">DM MesaJi</p>
									<div class="align-items-center d-flex flex-column">
										<input type="checkbox" name="welcomeDmCheck" id="welcomeDmCheckHD" style="display: none;" value="off">
										<input style="margin-left: 1rem; margin-right: .5rem;" type="checkbox" name="welcomeDmCheck" id="welcomeDmCheck" class="form-check-input" onclick="hiddenStuff('dm')" <%= formActiveOrPassive %> <%= dm[0] %> oninput="previewEmbed()">
										<label for="welcomeDmCheck" class="form-check-label">(Etkinleştirmek için Tıklayın)</label>
									</div>
								</div>
							</div>
							<div class="col-12 cntr">
								<div id="welcomeImage">
									<label  class="form-label" for="welcomeImageURL">Resim URL</label>
									<input type="text" name="welcomeImageURL" class="form-control bg-dark text-white" id="welcomeImageURL" value="<%= image[1] %>" placeholder="https://example.com/image.png" <%= image[2] %>  <%= formActiveOrPassive %> onkeydown="return event.key != 'Enter';" oninput="previewEmbed()">
								</div>

								<div id="welcomeDm" >
									<label style="margin-top: .5rem;" class="form-label" for="welcomeDm">DM MESAJI</label>
									<textarea type="text" name="welcomeDmText" class="form-control bg-dark text-white" id="welcomeDmText" rows="5" <%= formActiveOrPassive %> <%= dm[2] %> oninput="previewEmbed()"><%= dm[1] %></textarea>
								</div>


							</div>


							  </div>
					</div>

	
					<div class="card pt-2">
						<div class="col-lg-12 pb-3 pt-2 ps-3 pe-3 ">
							<p class="bas2" style="text-align: center;">Kayıt sonrası kullanıcıya hoşgeldin mesajı atmak için</p>
								<h5 class="bas" style="text-align: center;" >Sohbet kanalı</h5>

												<select name="welcomeChannel2" id="welcomeChannel2" class="form-select bg-dark text-white" required <%= formActiveOrPassive %> >
													<% if (channel2 !== "unset") { %>
												  <option selected value="<%= channel2.id %>" class="cntr"># <%= channel2.name %></option>
													<% } else { %>
														<option disabled selected value="" class="cntr">--- Sohbet Kanalını Seçin ---</option>
													<% } %> 
													<% for( let index = 1; index <= Object.keys(guildChannels).length; index++ ) { %>
														<% if (guildChannels[index][1] !== channel2.id) { %>
															<option value="<%= guildChannels[index][1] %>" class="cntr"># <%= guildChannels[index][0] %></option>
														<% } %>
													<% } %>
												</select>

							  <div class="mb-12 col-md-12">
								<label for="welcomeEmbedHeadline" class="col-12 bas pt-3" style="text-align: center;"><h5>Yerleştİrme Başliğİ</h5></label>
								  <input type="text" name="welcomeEmbedHeadline2" class="form-control bg-dark text-white" id="welcomeEmbedHeadline2" value="<%= headline2 %>" required <%= formActiveOrPassive %> onkeydown="return event.key != 'Enter';" oninput="previewEmbed()">
							  </div>
							  <br>
							  <div class="mb-12 col-md-12">
								<label for="welcomeEmbedText" class="col-12 col-form-label bas pt-3" style="text-align: center;"><h5>Yerleştİrme İçerİğİ</h5></label>
								  <textarea type="text" name="welcomeEmbedText2" class="form-control bg-dark text-white" id="welcomeEmbedText2" rows="5" <%= formActiveOrPassive %> required oninput="previewEmbed()"><%= message2 %></textarea>
							  </div>
							  <div class="row ">
								<div class="col-6" >
									<p class="bas pt-2 cntr">profİl resmİ</p>
									<div class="row ">
										<div class="d-flex justify-content-center">
											<div class="form-check form-check-inline col-6 d-flex justify-content-center">
												<input class="form-check-input d-flex justify-content-center" name="welcomeThumbnail2" type="radio" id="welcomeThumbnailYes2" value="true" <%= formActiveOrPassive %> <%= thumbnailYes2 %> oninput="previewEmbed()">
												<label class="form-check-label d-flex justify-content-center" for="welcomeThumbnailYes2">Açık</label>
											</div>
											<div class="form-check form-check-inline col-6 d-flex justify-content-center">
												<input class="form-check-input d-flex justify-content-center" name="welcomeThumbnail2" type="radio" id="welcomeThumbnailNo2" value="false" <%= formActiveOrPassive %> <%= thumbnailNo2 %> oninput="previewEmbed()">
												<label class="form-check-label d-flex justify-content-center" for="welcomeThumbnailNo2">Kapalı</label>
											</div>

										</div>

								  </div>
								</div>
								<div class="col-6">
								  <p for="welcomeEmbedColor2" class="pt-2 bas" style="text-align: center;">Yerleştİrme Rengİ</p>
								  <div class="col-12 align-items-center  d-flex flex-column">
									<input type="color" name="welcomeEmbedColor2" id="welcomeEmbedColor2" class="form-control form-control-color bg-dark text-white" value="<%= color2 %>" <%= formActiveOrPassive %> required oninput="previewEmbed()">
								</div>
								</div>
							  </div>
								  <div class="col-12 align-items-lg-center flex-column d-flex cntr">
									  <p  class="bas pt-2" style="text-align: center;">Özel Resİm</p>
								  <div class="align-items-center d-flex flex-column">
									  <input type="checkbox" name="welcomeImageCheck2" id="welcomeImageCheckHD2" style="display: none;" value="off">
									  <input  type="checkbox" name="welcomeImageCheck2" id="welcomeImageCheck2" class="form-check-input" onclick="hiddenStuff('img2'); previewEmbed();" <%= formActiveOrPassive %> <%= image2[0] %>>
									  <label for="welcomeImageCheck2" class="form-check-label">(Etkinleştirmek İçin Tıklayın)</label>
								  </div>
								  </div>
							  <div class="col-12 cntr">
								  <div id="welcomeImage2">
									  <label  class="form-label" for="welcomeImageURL2">Resim URL</label>
									  <input type="text" name="welcomeImageURL2" class="form-control bg-dark text-white" id="welcomeImageURL2" value="<%= image2[1] %>" placeholder="https://example.com/image.png" <%= image2[2] %>  <%= formActiveOrPassive %> onkeydown="return event.key != 'Enter';" oninput="previewEmbed()">
								  </div>
							  </div>
							</div>
						</div>
					</div>
					  

						  <div class="col-lg-6 ">
						  <div class="card  pt-3  pe-3 ps-3 pb-3">
							  <div class="">
								  <div class="row">
									<div class="col-12">
										<div class="row mb-2">
											<p class="cntr" >Bu rol sunucuya yeni katılan kayıt edilecek kullanıcı içindir.</p>
											<label class="col-sm-12 col-form-label bas cntr" >Kayıtsız rolü&nbsp;</label>
											<div class="col-sm-12 align-items-center  d-flex flex-column">
												<select  name="welcomeRole" id="welcomeRole" class="form-select bg-dark text-white" <%= role[2] %>  <%= formActiveOrPassive %>>
													<% if (role[0] !== "unset") { %>
													 <option selected value="<%= cRole.id %>" class="cntr">@ <%= cRole.name %></option>
													<% } else { %>
														<option id="roleDefaultOption" disabled selected value="" class="cntr" >--- Kayıtsız rolünü Seçin ---</option>
													<% } %>
													<% for( let num3 = 0; num3 < Object.keys(guildRoles).length; num3++ ) { %>
														<% if (guildRoles[num3][1] !== role[1]) { %>
															<option value="<%= guildRoles[num3][1] %>" class="cntr"><%= guildRoles[num3][0] %></option>
														<% } %>
													<% } %>
												</select>
										  </div>
									  </div>
								  </div>
							  </div>
						  </div>

			
						<div class="">
							  <div class="">
								  <div class="row">
									<div class="col-12">
										<div class="row mb-2">
											<p class="cntr" >Bu rol kayıt işlemlerini yapacak kullanıcılar içindir.</p>
											<label class="cntr bas"  >Moderatör rolü&nbsp;</label>
											<div class="col-sm-12">
												<select  name="welcomeRole2" id="welcomeRole2" class="form-select bg-dark text-white" <%= role2[2] %>  <%= formActiveOrPassive %>>
													<% if (role2[0] !== "unset") { %>
													 <option selected value="<%= cRole2.id %>" class="cntr">@ <%= cRole2.name %></option>
													<% } else { %>
														<option id="roleDefaultOption2" disabled selected value="" class="cntr" >--- Moderatör rolünü Seçin ---</option>
													<% } %>
													<% for( let num3 = 0; num3 < Object.keys(guildRoles).length; num3++ ) { %>
														<% if (guildRoles[num3][1] !== role2[1]) { %>
															<option value="<%= guildRoles[num3][1] %>" class="cntr"><%= guildRoles[num3][0] %></option>
														<% } %>
													<% } %>
												</select>
										  </div>
									  </div>
								  </div>
							  </div>
						  </div>
					  </div>
						 <div class="">
							  <div class="">
								  <div class="row">
									<div class="col-12">
										<div class="row mb-2">
											<p class="cntr" >Kaydı yapılan kullanıcıya verilir.</p>
											<label class="col-sm-12 col-form-label cntr bas" >Erkek üye rolü&nbsp;</label>
											
											
											<div class="col-sm-12">
												<select  name="welcomeRole3" id="welcomeRole3" class="form-select bg-dark text-white" <%= role3[2] %>  <%= formActiveOrPassive %>>
													<% if (role3[0] !== "unset") { %>
													 <option selected value="<%= cRole3.id %>" class="cntr">@ <%= cRole3.name %></option>
													<% } else { %>
														<option id="roleDefaultOption3" disabled selected value="" class="cntr" >--- Erkek rolünü Seçin ---</option>
													<% } %>
													<% for( let num3 = 0; num3 < Object.keys(guildRoles).length; num3++ ) { %>
														<% if (guildRoles[num3][1] !== role3[1]) { %>
															<option value="<%= guildRoles[num3][1] %>" class="cntr"><%= guildRoles[num3][0] %></option>
														<% } %>
													<% } %>
												</select>
										  </div>
									  </div>
								  </div>
							  </div>
						  </div>
					  </div>
						  <div class="">
							  <div class="">
								  <div class="row">
									<div class="col-12">
										<div class="row mb-12">
											<p class="cntr" >Kaydı yapılan kullanıcıya verilir.</p>
											<label class="col-sm-12 col-form-label cntr bas"  >Kadın üye rolü&nbsp;</label>
											<div class="col-sm-12">
												<select  name="welcomeRole4" id="welcomeRole4" class="form-select bg-dark text-white" <%= role4[2] %>  <%= formActiveOrPassive %>>
													<% if (role4[0] !== "unset") { %>
													 <option selected value="<%= cRole4.id %>" class="cntr">@ <%= cRole4.name %></option>
													<% } else { %>
														<option id="roleDefaultOption4" disabled selected value="" class="cntr" >--- Kadın rolünü Seçin ---</option>
													<% } %>
													<% for( let num3 = 0; num3 < Object.keys(guildRoles).length; num3++ ) { %>
														<% if (guildRoles[num3][1] !== role4[1]) { %>
															<option value="<%= guildRoles[num3][1] %>" class="cntr"><%= guildRoles[num3][0] %></option>
														<% } %>
													<% } %>
												</select>
										  </div>
									  </div>
								  </div>
							  </div>
						  </div>
					  </div>
											</div>
											<div class="card pb-3 pe-3 ps-3">
												<div class="row d-flex justify-content-center">
													
												<div class="col-6 align-items-center d-flex flex-column pt-3" >
													<p  class="cntr bas">OTO ROL</p>
													
													<div class="d-flex justify-content-center">
													  <div class="form-check form-check-inline col-6 d-flex justify-content-center">
														  <input class="form-check-input d-flex justify-content-center" name="otoRol" type="radio" id="otoRolYes" value="true" <%= formActiveOrPassive %> <%= otoRolYes %> oninput="previewEmbed()">
														  <label class="form-check-label d-flex justify-content-center" for="otoRolYes">Açık</label>
													  </div>
													  <div class="form-check form-check-inline col-6 d-flex justify-content-center">
														  <input class="form-check-input d-flex justify-content-center" name="otoRol" type="radio" id="otoRolNo" value="false" <%= formActiveOrPassive %> <%= otoRolNo %> oninput="previewEmbed()">
														  <label class="form-check-label d-flex justify-content-center" for="otoRolNo">Kapalı</label>
													  </div>
													</div>
													<h6 class="cntr bas2" style="color: #ffffff49;">(Kayıtsız Rolü İçin)</h6>
												</div>
					  <div class="col-6 align-items-center d-flex flex-column pt-3" >
						<p  class="cntr bas ">YAŞLA KAYIT</p>
						<div class="d-flex justify-content-center">
						  <div class="form-check form-check-inline col-6 d-flex justify-content-center" >
							  <input class="form-check-input d-flex justify-content-center" name="age" type="radio" id="ageYes" value="true" <%= formActiveOrPassive %> <%= ageYes %> oninput="previewEmbed()">
							  <label class="form-check-label d-flex justify-content-center" for="ageYes">Açık</label>
						  </div>
						  <div class="form-check form-check-inline col-6 d-flex justify-content-center">
							  <input class="form-check-input d-flex justify-content-center" name="age" type="radio" id="ageNo" value="false" <%= formActiveOrPassive %> <%= ageNo %> oninput="previewEmbed()">
							  <label class="form-check-label d-flex justify-content-center" for="ageNo">Kapalı</label>
						  </div>
						</div>
					</div>
				</div>
					<br>
					<div class="row">
					<div class="col-6">
						<p  class="bas cntr">Tag</p>
						<div class="align-items-center d-flex flex-column">
						<input type="checkbox" name="tagCheck" id="tagCheckHD" style="display: none;" value="off">
						<input  type="checkbox" name="tagCheck" id="tagCheck" class="form-check-input" onclick="hiddenStuff('tag'); previewEmbed();" <%= formActiveOrPassive %> <%= tag[0] %>>
						<label for="tagCheck" class="form-check-label">(Etkinleştirmek İçin Tıklayın)</label>
					</div>
					</div>
					<div class="col-6">
						<p  class="bas cntr">Sembol</p>
						<div class="align-items-center d-flex flex-column">
						<input type="checkbox" name="sembolCheck" id="sembolCheckHD" style="display: none;" value="off"> 
						<input  type="checkbox" name="sembolCheck" id="sembolCheck" class="form-check-input" onclick="hiddenStuff('sembol'); previewEmbed();" <%= formActiveOrPassive %> <%= sembol[0] %>>
						<label for="sembolCheck" class="form-check-label">(Etkinleştirmek İçin Tıklayın)</label>
					</div>
				</div>
				<div id="tag">
					<p  class="form-label cntr" for="tagURL">Tag</p>
					<input type="text" name="tagURL" class="form-control bg-dark text-white" id="tagURL" value="<%= tag[1] %>" placeholder="lütfen tagı giriniz" <%= tag[2] %>  <%= formActiveOrPassive %> onkeydown="return event.key != 'Enter';" oninput="previewEmbed()" maxlength=“1”>
				</div>
				<div id="sembol">
					<p  class="form-label cntr" for="sembolURL">Sembol</p>
					<input type="text" name="sembolURL" class="form-control bg-dark text-white" id="sembolURL" value="<%= sembol[1] %>" placeholder="lütfen sembolü giriniz" <%= sembol[2] %>  <%= formActiveOrPassive %> onkeydown="return event.key != 'Enter';" oninput="previewEmbed()" maxlength=“1”>
				</div>
		  </div>
</div>
												  </div>

						  <div class="col-12 align-items-center pt-4 d-flex flex-column align-items-center">
							<button data-backdrop="static" data-keyboard="false"   type="submit" class="btn btn-success" <%= formActiveOrPassive %>>Değişiklikleri Kaydet</button>
						  </div>
					</div>
				  </div>
				</div>

			</form>
			<% } else { %>
				<div class="col-12 align-items-center pt-4 d-flex flex-column">Sistem şuanda kapalı.</div>
			<% } %>
			</section>
			</main>
	</body>
		<%- await include('footer.ejs'); %>
		<%- await include('../../partials/error.ejs'); %>
		<%- await include('bilgi.ejs'); %>
</html>